/*!
 * Nexus Graph Control v17.12.0 - External CSS Version
 * Built: 2025-07-06
 * Â© 2025 Infitwin - Production Ready
 *
 * IMPORTANT: This version requires external CSS file!
 * Include: nexus-graph-control.bundle.min.css
 *
 * Usage:
 *   <link rel="stylesheet" href="nexus-graph-control.bundle.min.css">
 *   <script src="nexus-graph-control.bundle.min.js"></script>
 *   const { NexusGraphControl } = window.NexusGraphControl;
 *
 */
/* this gets exported as style.css and can be used for the default theming */
/* these are the necessary styles for React Flow, they get used by base.css and style.css */
.react-flow {
  direction: ltr;
}
.react-flow__container {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}
.react-flow__pane {
  z-index: 1;
  cursor: -webkit-grab;
  cursor: grab;
}
.react-flow__pane.selection {
    cursor: pointer;
  }
.react-flow__pane.dragging {
    cursor: -webkit-grabbing;
    cursor: grabbing;
  }
.react-flow__viewport {
  transform-origin: 0 0;
  z-index: 2;
  pointer-events: none;
}
.react-flow__renderer {
  z-index: 4;
}
.react-flow__selection {
  z-index: 6;
}
.react-flow__nodesselection-rect:focus,
.react-flow__nodesselection-rect:focus-visible {
  outline: none;
}
.react-flow .react-flow__edges {
  pointer-events: none;
  overflow: visible;
}
.react-flow__edge-path,
.react-flow__connection-path {
  stroke: #b1b1b7;
  stroke-width: 1;
  fill: none;
}
.react-flow__edge {
  pointer-events: visibleStroke;
  cursor: pointer;
}
.react-flow__edge.animated path {
    stroke-dasharray: 5;
    -webkit-animation: dashdraw 0.5s linear infinite;
            animation: dashdraw 0.5s linear infinite;
  }
.react-flow__edge.animated path.react-flow__edge-interaction {
    stroke-dasharray: none;
    -webkit-animation: none;
            animation: none;
  }
.react-flow__edge.inactive {
    pointer-events: none;
  }
.react-flow__edge.selected,
  .react-flow__edge:focus,
  .react-flow__edge:focus-visible {
    outline: none;
  }
.react-flow__edge.selected .react-flow__edge-path,
  .react-flow__edge:focus .react-flow__edge-path,
  .react-flow__edge:focus-visible .react-flow__edge-path {
    stroke: #555;
  }
.react-flow__edge-textwrapper {
    pointer-events: all;
  }
.react-flow__edge-textbg {
    fill: white;
  }
.react-flow__edge .react-flow__edge-text {
    pointer-events: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
  }
.react-flow__connection {
  pointer-events: none;
}
.react-flow__connection .animated {
    stroke-dasharray: 5;
    -webkit-animation: dashdraw 0.5s linear infinite;
            animation: dashdraw 0.5s linear infinite;
  }
.react-flow__connectionline {
  z-index: 1001;
}
.react-flow__nodes {
  pointer-events: none;
  transform-origin: 0 0;
}
.react-flow__node {
  position: absolute;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  pointer-events: all;
  transform-origin: 0 0;
  box-sizing: border-box;
  cursor: -webkit-grab;
  cursor: grab;
}
.react-flow__node.dragging {
    cursor: -webkit-grabbing;
    cursor: grabbing;
  }
.react-flow__nodesselection {
  z-index: 3;
  transform-origin: left top;
  pointer-events: none;
}
.react-flow__nodesselection-rect {
    position: absolute;
    pointer-events: all;
    cursor: -webkit-grab;
    cursor: grab;
  }
.react-flow__handle {
  position: absolute;
  pointer-events: none;
  min-width: 5px;
  min-height: 5px;
  width: 6px;
  height: 6px;
  background: #1a192b;
  border: 1px solid white;
  border-radius: 100%;
}
.react-flow__handle.connectionindicator {
    pointer-events: all;
    cursor: crosshair;
  }
.react-flow__handle-bottom {
    top: auto;
    left: 50%;
    bottom: -4px;
    transform: translate(-50%, 0);
  }
.react-flow__handle-top {
    left: 50%;
    top: -4px;
    transform: translate(-50%, 0);
  }
.react-flow__handle-left {
    top: 50%;
    left: -4px;
    transform: translate(0, -50%);
  }
.react-flow__handle-right {
    right: -4px;
    top: 50%;
    transform: translate(0, -50%);
  }
.react-flow__edgeupdater {
  cursor: move;
  pointer-events: all;
}
.react-flow__panel {
  position: absolute;
  z-index: 5;
  margin: 15px;
}
.react-flow__panel.top {
    top: 0;
  }
.react-flow__panel.bottom {
    bottom: 0;
  }
.react-flow__panel.left {
    left: 0;
  }
.react-flow__panel.right {
    right: 0;
  }
.react-flow__panel.center {
    left: 50%;
    transform: translateX(-50%);
  }
.react-flow__attribution {
  font-size: 10px;
  background: rgba(255, 255, 255, 0.5);
  padding: 2px 3px;
  margin: 0;
}
.react-flow__attribution a {
    text-decoration: none;
    color: #999;
  }
@-webkit-keyframes dashdraw {
  from {
    stroke-dashoffset: 10;
  }
}
@keyframes dashdraw {
  from {
    stroke-dashoffset: 10;
  }
}
.react-flow__edgelabel-renderer {
  position: absolute;
  width: 100%;
  height: 100%;
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.react-flow__edge.updating .react-flow__edge-path {
      stroke: #777;
    }
.react-flow__edge-text {
    font-size: 10px;
  }
.react-flow__node.selectable:focus,
  .react-flow__node.selectable:focus-visible {
    outline: none;
  }
.react-flow__node-default,
.react-flow__node-input,
.react-flow__node-output,
.react-flow__node-group {
  padding: 10px;
  border-radius: 3px;
  width: 150px;
  font-size: 12px;
  color: #222;
  text-align: center;
  border-width: 1px;
  border-style: solid;
  border-color: #1a192b;
  background-color: white;
}
.react-flow__node-default.selectable:hover, .react-flow__node-input.selectable:hover, .react-flow__node-output.selectable:hover, .react-flow__node-group.selectable:hover {
      box-shadow: 0 1px 4px 1px rgba(0, 0, 0, 0.08);
    }
.react-flow__node-default.selectable.selected,
    .react-flow__node-default.selectable:focus,
    .react-flow__node-default.selectable:focus-visible,
    .react-flow__node-input.selectable.selected,
    .react-flow__node-input.selectable:focus,
    .react-flow__node-input.selectable:focus-visible,
    .react-flow__node-output.selectable.selected,
    .react-flow__node-output.selectable:focus,
    .react-flow__node-output.selectable:focus-visible,
    .react-flow__node-group.selectable.selected,
    .react-flow__node-group.selectable:focus,
    .react-flow__node-group.selectable:focus-visible {
      box-shadow: 0 0 0 0.5px #1a192b;
    }
.react-flow__node-group {
  background-color: rgba(240, 240, 240, 0.25);
}
.react-flow__nodesselection-rect,
.react-flow__selection {
  background: rgba(0, 89, 220, 0.08);
  border: 1px dotted rgba(0, 89, 220, 0.8);
}
.react-flow__nodesselection-rect:focus,
  .react-flow__nodesselection-rect:focus-visible,
  .react-flow__selection:focus,
  .react-flow__selection:focus-visible {
    outline: none;
  }
.react-flow__controls {
  box-shadow: 0 0 2px 1px rgba(0, 0, 0, 0.08);
}
.react-flow__controls-button {
    border: none;
    background: #fefefe;
    border-bottom: 1px solid #eee;
    box-sizing: content-box;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 16px;
    height: 16px;
    cursor: pointer;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    padding: 5px;
  }
.react-flow__controls-button:hover {
      background: #f4f4f4;
    }
.react-flow__controls-button svg {
      width: 100%;
      max-width: 12px;
      max-height: 12px;
    }
.react-flow__controls-button:disabled {
      pointer-events: none;
    }
.react-flow__controls-button:disabled svg {
        fill-opacity: 0.4;
      }
.react-flow__minimap {
  background-color: #fff;
}
.react-flow__minimap svg {
  display: block;
}
.react-flow__resize-control {
  position: absolute;
}
.react-flow__resize-control.left,
.react-flow__resize-control.right {
  cursor: ew-resize;
}
.react-flow__resize-control.top,
.react-flow__resize-control.bottom {
  cursor: ns-resize;
}
.react-flow__resize-control.top.left,
.react-flow__resize-control.bottom.right {
  cursor: nwse-resize;
}
.react-flow__resize-control.bottom.left,
.react-flow__resize-control.top.right {
  cursor: nesw-resize;
}
/* handle styles */
.react-flow__resize-control.handle {
  width: 4px;
  height: 4px;
  border: 1px solid #fff;
  border-radius: 1px;
  background-color: #3367d9;
  transform: translate(-50%, -50%);
}
.react-flow__resize-control.handle.left {
  left: 0;
  top: 50%;
}
.react-flow__resize-control.handle.right {
  left: 100%;
  top: 50%;
}
.react-flow__resize-control.handle.top {
  left: 50%;
  top: 0;
}
.react-flow__resize-control.handle.bottom {
  left: 50%;
  top: 100%;
}
.react-flow__resize-control.handle.top.left {
  left: 0;
}
.react-flow__resize-control.handle.bottom.left {
  left: 0;
}
.react-flow__resize-control.handle.top.right {
  left: 100%;
}
.react-flow__resize-control.handle.bottom.right {
  left: 100%;
}
/* line styles */
.react-flow__resize-control.line {
  border-color: #3367d9;
  border-width: 0;
  border-style: solid;
}
.react-flow__resize-control.line.left,
.react-flow__resize-control.line.right {
  width: 1px;
  transform: translate(-50%, 0);
  top: 0;
  height: 100%;
}
.react-flow__resize-control.line.left {
  left: 0;
  border-left-width: 1px;
}
.react-flow__resize-control.line.right {
  left: 100%;
  border-right-width: 1px;
}
.react-flow__resize-control.line.top,
.react-flow__resize-control.line.bottom {
  height: 1px;
  transform: translate(0, -50%);
  left: 0;
  width: 100%;
}
.react-flow__resize-control.line.top {
  top: 0;
  border-top-width: 1px;
}
.react-flow__resize-control.line.bottom {
  border-bottom-width: 1px;
  top: 100%;
}

/* Clean React Flow overrides - minimal approach */

/* Remove transitions to prevent animation jumps */
.react-flow__node {
  transition: none !important;
}

/* Ensure dragging nodes appear on top */
.react-flow__node.dragging {
  z-index: 1000 !important;
}

/* Alternative: Use React Flow's built-in dragging class */
.react-flow__node-dragging {
  z-index: 1000 !important;
}

/* Ensure edges stay below nodes */
.react-flow__edges {
  z-index: 0 !important;
}

/* Ensure nodes have proper stacking */
.react-flow__nodes {
  z-index: 1 !important;
}

/* Hide the default selection box - we only want the golden ring */
.react-flow__node.selected .react-flow__handle {
  /* Keep handles visible but no box */
}

/* Remove the selection rectangle */
.react-flow__node-custom.selected::before {
  display: none !important;
}

/* Hide any default selection styling */
.react-flow__node.selected {
  box-shadow: none !important;
  outline: none !important;
}

/* Disable the selection box UI */
.react-flow__nodesselection {
  display: none !important;
}

/* Disable selection box on the node wrapper */
.react-flow__node-default.selected,
.react-flow__node-custom.selected {
  box-shadow: none !important;
  border: none !important;
  outline: none !important;
}

/* Ensure no background selection box */
.react-flow__node.selected::after,
.react-flow__node.selected::before {
  display: none !important;
}

/* Pulse animation for highlighted nodes */
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

/* New node golden pulse animation */
@keyframes newNodePulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 20px rgba(255, 215, 0, 0.8), 0 0 40px rgba(255, 215, 0, 0.4);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 0 30px rgba(255, 215, 0, 1), 0 0 60px rgba(255, 215, 0, 0.6);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 20px rgba(255, 215, 0, 0.8), 0 0 40px rgba(255, 215, 0, 0.4);
  }
}

/* Copied node green pulse animation */
@keyframes copiedNodePulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 15px rgba(0, 255, 136, 0.8), 0 0 30px rgba(0, 255, 136, 0.4);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 0 25px rgba(0, 255, 136, 1), 0 0 50px rgba(0, 255, 136, 0.6);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 15px rgba(0, 255, 136, 0.8), 0 0 30px rgba(0, 255, 136, 0.4);
  }
}

/* History focus orange pulse animation (only 3 pulses) */
@keyframes historyFocusPulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 20px rgba(255, 107, 53, 1), 0 0 40px rgba(255, 107, 53, 0.6);
  }
  50% {
    transform: scale(1.1);
    box-shadow: 0 0 30px rgba(255, 107, 53, 1), 0 0 60px rgba(255, 107, 53, 0.8);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 20px rgba(255, 107, 53, 1), 0 0 40px rgba(255, 107, 53, 0.6);
  }
}
/* Human-friendly connection handles 
   Designed for better discoverability and easier targeting
   Handles are 40x40px (5x larger than default) and visible on hover */
.connection-handle {
  transition: opacity 0.2s ease-in-out !important;
}

/* Show handles on hover for better discoverability */
.react-flow__node:hover .connection-handle {
  opacity: 0.3 !important;
}

.connection-handle:hover {
  opacity: 0.8 !important;
  cursor: crosshair;
}

/* Visual feedback during connection */
.react-flow__handle-connecting {
  opacity: 1 !important;
  background: #0096ff !important;
}

/* Connection line style */
.react-flow__connection {
  stroke: #0096ff !important;
  stroke-width: 3px !important;
}

.react-flow__connection-path {
  stroke: #0096ff !important;
  stroke-width: 3px !important;
}
/* Edge interaction and selection styles */

/* Make interaction area larger and accept drops */
.react-flow__edge-interaction {
  stroke-width: 40px !important;
  cursor: pointer !important;
  pointer-events: all !important;
  stroke: transparent !important;
  stroke-linecap: round !important;
}

/* Make edge paths accept pointer events for drag-drop */
.react-flow__edge-path {
  pointer-events: all !important;
  cursor: pointer !important;
}

/* Make the entire edge group accept pointer events */
.react-flow__edge {
  pointer-events: all !important;
}

/* Increase edge label click area */
.react-flow__edge-text {
  pointer-events: all !important;
  cursor: pointer !important;
}

/* Debug: temporarily show interaction area on hover - only if not selected */
.react-flow__edge:not(.selected):hover .react-flow__edge-interaction {
  stroke: rgba(0, 255, 0, 0.2) !important;
}

/* Default edge style */
.react-flow__edge .react-flow__edge-path {
  transition: all 0.2s ease-in-out;
}

/* Hover effect - only apply if not selected */
.react-flow__edge:not(.selected):hover .react-flow__edge-path {
  stroke: #9CA3AF !important;
  stroke-width: 4px !important;
}

/* Selected edge style - override inline styles and hover */
.react-flow__edge.selected .react-flow__edge-path {
  stroke: #FFD700 !important;
  stroke-width: 5px !important;
  filter: drop-shadow(0 0 6px rgba(255, 215, 0, 0.6));
}

/* Edge labels */
.react-flow__edge-text {
  pointer-events: all !important;
  cursor: pointer !important;
}

.react-flow__edge-textbg {
  fill: white !important;
  fill-opacity: 0.8 !important;
}

/* Selected edge label */
.react-flow__edge.selected .react-flow__edge-text text {
  fill: #FFD700 !important;
  font-weight: bold !important;
}

/* Animated edges (for search highlighting) */
.react-flow__edge.animated .react-flow__edge-path {
  stroke: #00ff00 !important;
  stroke-width: 4px !important;
  animation: dashdraw 0.5s linear infinite !important;
  stroke-dasharray: 5 !important;
}

@keyframes dashdraw {
  to {
    stroke-dashoffset: -10;
  }
}

/* Arrow markers */
.react-flow__arrowhead {
  fill: #6B7280;
}

.react-flow__edge:not(.selected):hover .react-flow__arrowhead,
.react-flow__edge:not(.selected):hover marker path {
  fill: #9CA3AF !important;
}

.react-flow__edge.selected .react-flow__arrowhead,
.react-flow__edge.selected marker path {
  fill: #FFD700 !important;
}

.react-flow__edge.animated .react-flow__arrowhead,
.react-flow__edge.animated marker path {
  fill: #00ff00 !important;
}
/* Base menu styles */
.neo4j-menu {
  background: #ffffff;
  border-radius: 8px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
  padding: 12px;
  min-width: 220px;
  max-width: 280px;
}

.neo4j-menu--relationship {
  border: 2px solid #007bff;
}

.neo4j-menu--node-type {
  border: 2px solid #28a745;
  min-width: 240px;
  max-width: 300px;
}

/* Header */
.neo4j-menu__header {
  font-size: 13px;
  font-weight: bold;
  margin-bottom: 10px;
  color: #333333;
  border-bottom: 1px solid #e0e0e0;
  padding-bottom: 8px;
}

/* Menu buttons */
.neo4j-menu__button {
  display: block;
  width: 100%;
  padding: 8px 12px;
  margin: 3px 0;
  background: #ffffff;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 12px;
  color: #333333;
  cursor: pointer;
  text-align: left;
  transition: all 0.2s;
  line-height: 1.4;
}

.neo4j-menu__button--with-icon {
  padding: 10px 12px;
  display: flex;
  align-items: center;
  gap: 8px;
}

/* Hover states - pure CSS, no JavaScript needed! */
.neo4j-menu--relationship .neo4j-menu__button:hover {
  background: #007bff;
  color: #ffffff;
  border-color: #007bff;
}

.neo4j-menu--relationship .neo4j-menu__button:hover * {
  color: #ffffff;
}

.neo4j-menu--node-type .neo4j-menu__button:hover {
  background: #28a745;
  color: #ffffff;
  border-color: #28a745;
}

.neo4j-menu--node-type .neo4j-menu__button:hover * {
  color: #ffffff;
}

/* Button content */
.neo4j-menu__button-primary {
  font-weight: 600;
}

.neo4j-menu__button-secondary {
  font-size: 10px;
  opacity: 0.8;
  margin-top: 2px;
}

.neo4j-menu__icon {
  font-size: 18px;
  flex-shrink: 0;
}

.neo4j-menu__content {
  flex: 1;
}

/* Cancel button */
.neo4j-menu__cancel {
  display: block;
  width: 100%;
  padding: 6px 10px;
  margin-top: 6px;
  background: #dc3545;
  color: white;
  border: none;
  border-radius: 4px;
  font-size: 11px;
  cursor: pointer;
  transition: all 0.2s;
}

.neo4j-menu__cancel:hover {
  background: #c82333;
}
